name: prd Auto Deploy to AWS Lambda and some resources

on:
  workflow_dispatch:
    inputs:
      force_deploy:
        required: true
        type: boolean
        description: forced deployment flag
        default: false
  pull_request:
    paths:
      - '.github/workflows/prd-rust-hello-world-deploy.yml'
      - 'rust/**'
      - '!**.md'
    branches: [main]
    types: [closed]

permissions:
  id-token: write
  contents: write

jobs:
  build-and-deploy:
    name: Build and Deploy for prd
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event.pull_request.merged || github.event.inputs.force_deploy }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN_FOR_SAM }}
          role-session-name: github-actions-session-for-rust-hello-world
          role-duration-seconds: 900

      - name: Run npm install for actions
        working-directory: ./.github/actions/get-ssm-parameters
        run: npm install

      - name: Get SSM Parameters
        id: ssm-parameters
        uses: ./.github/actions/get-ssm-parameters
        with:
          default_region: ${{ secrets.AWS_DEFAULT_REGION }}
          ssm_path_name: ${{ secrets.AWS_SSM_PATH_NAME }}
          env: ${{ secrets.ENV }}
          cd_parameters: |-
            AWS_ACCOUNT_ID
            AWS_S3_DEPLOY_LAMBDA_BUCKET
            SLACK_WEBHOOK_GH_NOTIFY
          parameters: |-
            SSM_PARAMETER

      - name: Set SSM Parameters
        id: set-secrets
        env:
          SSM_PARAMETERS: ${{ steps.ssm-parameters.outputs.ssm_parameters }}
        run: |
          PARAMETERS_ARRAY=( \
            AWS_ACCOUNT_ID \
            AWS_S3_DEPLOY_LAMBDA_BUCKET \
            SLACK_WEBHOOK_GH_NOTIFY \
            SSM_PARAMETER \
          )
          for key in "${PARAMETERS_ARRAY[@]}"; \
          do \
              VAR_VALUE="$(jq --arg var_name $key -r '.[$var_name]' <(echo "${SSM_PARAMETERS}"))"; \
              SET_OUTPUT_STRING="::set-output name=${key}::${VAR_VALUE}"; \
              echo "${SET_OUTPUT_STRING}"; \
          done

      - name: Delete node modules for actions
        working-directory: ./.github/actions/get-ssm-parameters
        run: rm -rf node_modules

      - name: Setup Rust
        env:
          ARCH: aarch64-unknown-linux-musl
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          rustup target add ${ARCH}
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Setup Sam
        uses: aws-actions/setup-sam@v1

      - name: Build by SAM
        working-directory: ./rust-hello-world
        run: sam build

      - name: Deploy by SAM
        working-directory: ./rust-hello-world

        env:
          ENV: ${{ secrets.ENV }}
          AWS_S3_DEPLOY_LAMBDA_BUCKET: ${{ steps.set-secrets.outputs.AWS_S3_DEPLOY_LAMBDA_BUCKET }}
          SSM_PARAMETER: ${{ steps.set-secrets.outputs.SSM_PARAMETER }}
        run: |
          sam deploy \
            --stack-name "${ENV}-${{secrets.LAMBDA_PJ_PREFIX}}" \
            --s3-bucket "${AWS_S3_DEPLOY_LAMBDA_BUCKET}" \
            --s3-prefix "${ENV}-${{secrets.LAMBDA_PJ_PREFIX}}" \
            --region "${{ secrets.AWS_DEFAULT_REGION }}" \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              PJPrefix="${{ secrets.PJ_PREFIX }}" \
              SsmPath="${{ secrets.AWS_SSM_PATH_NAME }}" \
              Env="${ENV}" \
              SsmParameter="${SSM_PARAMETER}"

      - name: Notify result to slack
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Deploy Lambda*'
        env:
          SLACK_WEBHOOK: ${{ steps.set-secrets.outputs.SLACK_WEBHOOK_GH_NOTIFY }}
